diff --git a/src/Ares/App.hs b/src/Ares/App.hs
index c884b16..65749de 100644
--- a/src/Ares/App.hs
+++ b/src/Ares/App.hs
@@ -16,6 +16,7 @@ module App
 
 import qualified Data.Attoparsec.Text as Atto
 import qualified Data.Text as Text
+import Control.Applicative
 import Control.Monad (filterM)
 import Data.Aeson
 import Data.Maybe (catMaybes)
diff --git a/src/Ares/Config.hs b/src/Ares/Config.hs
index c850fe2..8bde402 100644
--- a/src/Ares/Config.hs
+++ b/src/Ares/Config.hs
@@ -9,6 +9,7 @@ module Config
   where
 
 import qualified Data.ByteString.Lazy as LBS
+import Control.Applicative
 import Data.Aeson (eitherDecode, FromJSON)
 import Data.Monoid ((<>))
 import GHC.Generics (Generic)
diff --git a/src/ares.hs b/src/ares.hs
index 39bf930..4713881 100644
--- a/src/ares.hs
+++ b/src/ares.hs
@@ -6,6 +6,7 @@
 
 module Main (main) where
 
+import Control.Applicative
 import Control.Arrow ((&&&))
 import Control.Concurrent
 import Control.Exception (bracket)
diff --git a/src/Ares/Manager.hs b/src/Ares/Manager.hs
index b30c95c..a9e369c 100644
--- a/src/Ares/Manager.hs
+++ b/src/Ares/Manager.hs
@@ -7,6 +7,7 @@ module Manager
     )
   where
 
+import Control.Applicative
 import Control.Concurrent
 import Control.Monad (filterM, when)
 import Control.Monad.Extra (partitionM, whenM)
diff --git a/src/Ares/Process.hs b/src/Ares/Process.hs
index ff2a0b0..d9ccf6d 100644
--- a/src/Ares/Process.hs
+++ b/src/Ares/Process.hs
@@ -16,6 +16,7 @@ import qualified Control.Exception as C
 import System.IO
 import System.Process
 import System.Process.Internals
+import System.Exit (ExitCode(ExitSuccess))
 
 withCreateProcess
   :: CreateProcess
@@ -51,6 +52,7 @@ cleanupProcess (mb_stdin, mb_stdout, mb_stderr,
     return ()
   where
     resetCtlcDelegation (ProcessHandle m _) = ProcessHandle m False
+    stopDelegateControlC = endDelegateControlC ExitSuccess
 
 ignoreSigPipe :: IO () -> IO ()
 ignoreSigPipe = C.handle $ \e -> case e of
diff --git a/src/Ares/WTF.hs b/src/Ares/WTF.hs
index b30c95c..a9e369c 100644
--- a/src/Ares/WTF.hs
+++ b/src/Ares/WTF.hs
@@ -7,6 +7,7 @@ module WTF
     )
   where
 
+import Control.Applicative
 import System.Directory (renameFile)
 import System.FilePath (splitFileName)
 import System.IO (hClose)
